#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 722 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 3 2 #" ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-frac"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"get-rational"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;-- Reference: Numerical Methods in Scientific Computing Vol. 1"
0 0 24 29 1 #"\n"
0 0 17 3 50
#";;--        By: Germund Dahlquist and \303\205ke Bj\303\266rck"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;-- Continued fractions can be used to represent real numbers & hav"
 #"e the form:"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";;-- x = "
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;         "
0 2          29 17 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           9 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0\341\0\0\0\225\b"
 #"\6\0\0\0\256\0\235\255\0\0\17oIDATx\234\355\335\177LU\365\37"
 #"\307\361\347W@\274\363\206\305\274.\257"
 #"\322\346\2179A\6\211\334\374\25\226\350"
 #"\356\267\306P\247\245\r\204\351\262\"4"
 #"\215tn\376a\313M\262\34\324\312`"
 #"*\264\334-V\256\4\321a\320\224\224\353\26\vw\321$o1\321\255\253G\307"
 #"\235\326\330\241\353\25\317\372\376\301\270}"
 #"\211\37\2q9\334{\337\217\315M\316"
 #"\275\234\373\276s/?\347|>\237\363"
 #"\371\374\347\257\277\376\372\v!\204n\306"
 #"\350]\200\20\241NB(\204\316$\204B\350LB(\204\316$\204\242Wn\267"
 #"[\357\22B\206\204P\0\240i\32n"
 #"\267\e\247\323\311\346\315\233\261Z\255\250"
 #"\252\252wY!!\\\357\2\304\350\260{\367n***hkkCQ\24,"
 #"\26\213\336%\205\214\377\3108\241\200\277"
 #"/?\333\332\332\2309s&\26\213\205\332\332Z\214F\243\316\225\5?i\t\5"
 #"\0&\223I\357\22B\226\334\23\n\2413\t\241\20:\223\20\n\2413\t\241\20"
 #":\223\20\n\2413\t\241\20:\223\20\n\2413\t\241\0@UU\334n7\227"
 #"/_\6\240\275\275\235\346\346f\\."
 #"\27^\257W\347\352\202\233\314\230\21\0\224\225\225QPP\0@DD\4\0\35"
 #"\35\35\0\354\335\273\227\264\2644\335j\vv\22B\1tN\340\366x<\275\276"
 #"f0\30\b\v\v\e\341\212B\207\204P\b\235\311=\241\20:\323-\204\232\246"
 #"\351\365\321B\214*\272\205\360\320\241C8\34\16\275>^\210QC\267\02066"
 #"6\322\324\324\244\327\307\v1j\364\ba\327x\321H\220\0367!\376\361Po"
 #"qq1%%%\230\315fbbbHHH`\302\204\tdff\352U\237\20Ao\ftv"
) 500
(
 #"\222\254Z\265\212\374\374|\n\v\v9r\344\b\0\2337o\246\246\246F:Q"
 #"\204\360\2431\3209[\242\262\262\222}"
 #"\373\366\221\232\232\212\311d\"%%\5\200\5\v\26t\273l,//'''"
 #"\207\375\373\367\178\234\232\246\365\370\323"
 #"\327q\t\274\b5\341n\267\233]\273va4\32y\376\371\347}/\330\355v"
 #"\0\226.]\352;f\263\331\260\331l"
 #"\34?~\34\233\315\306\302\205\v\371\341"
 #"\207\37\372\274\267\3234\215C\207\16\321"
 #"\330\330\330\343\265K\227.\241(\212\357"
 #"s\376\337\353\257\277NRRR\237E/_\276\234\266\266\266\1\177I!F\233"
 #"\27^x\201\235;w\2\20\376\343\217?\242(\n+W\256$**\n\350\354"
 #"\234q8\34\314\236=\233\230\230\30\0\274^/\373\366\355#??\37\243\321H"
 #"vv6\371\371\371\234;w\216\324\324\324^?(,,\214\364\364t&L\230"
 #"\320\3435EQ\2305k\26\311\311\311=^KLL\354\367\vl\334\270QZ"
 #"L\21\320\342\343\343}\177\17\277s\347"
 #"\16\0\263f\315\"22\22\0\217\307CCC\3YYYDDDP^^"
 #"NJJ\n\277\374\362\213\357\27#\"\"\2306m\32v\273\275\317\20\2\304\304"
 #"\304\364\332\261s\366\354Y\222\223\223\207"
 #"\324\351#\35E\"\230\204w]J\376\177\353\363\365\327_\3\235i=}\3724"
 #"\237~\372)f\263\271\327\23\374\361\307"
 #"\37\376\257R\210 6\306j\265b6\233\261\333\355\270\335nl6\e\a\16\34"
 #"\0 ::\232\342\342b222P\24E\347R\205\bNcL&\23'O"
 #"\236\344\366\355\333X\255V\32\e\e\271"
 #"x\361\"\257\275\366\32EEE\314\2313\207\314\314L_o\251\20bx\205\3"
 #"$%%q\364\350Q:::|\313\236\37<x\20UU}?\e\f\206n\227\244\35\35\35"
) 500
(
 #"\\\277~\235\267\336zk\310\37.\235+B\f\362y\302\274\274<\0\336{\357"
 #"=N\237>\315\253\257\276\312\257\277\376"
 #":\244\375\n\\.\27f\263Y\246\256"
 #"\211\2207\350\207z\363\362\362\360x<"
 #"\374\371\347\237\354\332\265\213\330\330X\177"
 #"\325&DH\30\322\223\365^\257\227\360"
 #"\360pi\305\304\240\324\326\326\262x\361"
 #"b\337P\230\350$\313[\b\277\3214"
 #"\rEQ\250\253\253\243\246\246\206\212\212"
 #"\n\256\\\271\342\233\0\":\311\326h"
 #"\302o\24Ea\305\212\25\214\37?\236"
 #"\373\367\357\313\316\277}\2205f\204\337"
 #"\304\304\304`\267\333\251\256\256\226\235\177"
 #"\373!-\241\360+\243\321(CQ\17!-\241\20:\223\20\n\2413\t\241\20"
 #":\223\20\n\2413\t\241\20:\223\20"
 #"\212\21\325\320\320\240w\t\243\216\204P\214\210\256a\212\276v~\ne2N("
 #"\374\306\353\365r\364\350Q\0\337j\353]KhN\235:\265\337eQB\211\314"
 #"\35\25~\243\252*\271\271\271DFF"
 #"v\233\354\257i\32\363\347\317g\323\246M:V7zH\b\205\320\231\334\23\n"
 #"\2413\t\341 \271\335n\234N\247\336e\210 \"!\34\244\312\312J>\370\340"
 #"\3\275\313\20A$\250B8\22\263\365"
 #"\307\216\35\353\367\317\20\241%(\206("
 #"ZZZ\370\342\213/\270q\343\6s"
 #"\347\316\345\305\27_\244\245\245\205\5\v"
 #"\26\350]\232\20\17\25\360-a}}=K\226,\341\326\255[\254Z\265\212\252"
 #"\252*\236|\362I\266n\335*Or"
 #"\213\200\20\320-\241\333\355f\315\2325"
 #"\304\306\306RPP\200\321hd\372\364"
 #"\351\304\305\305a\261X0\30\f\335\336"
 #"\357\365z\371\371\347\237\373\335\361I\210"
 #"\221\26\320!\334\275{7\212\242p\370"
 #"\360a\337\332\247\16\207\3\200E\213\26\371\6\210\353\353\353"
 #"\371\374\363\317\251\255\255\345\271\347\236#11\361\241+\305\271"
) 500
(
 #"\335n*++{\334\003666\242(\n6\233\255\307\357\304\307\307\367\ep"
 #"\233\315\306\365\353\327\a\365\35E\360\330"
 #"\276}{\257k\364\6l\b\335n7'O\236\304l6\363\324SO\371\216w"
 #"\355w\270d\311\22\337\261)S\246\260"
 #"f\315\232Au\252\\\276|\231\272\272"
 #"\272\36\313\363)\212\322\347\276\212S\247"
 #"N\355\367\234\327\257_\347\312\225+\3"
 #"\256A\204\206\200\2351\343t:\211\213"
 #"\213c\331\262e\34?~\34\243\321\210"
 #"\252\252\244\246\246r\363\346M.^\274\b\200\311d\2:{Nw\354\330\1@"
 #"AA\301\220\327L\265\331l\330\355v"
 #"JJJ\206\347\213\210\220\27\260\0353"
 #"]\315\372\314\2313}\177\357\332W\261ke/\253\325*\2353b\324\v\330\313"
 #"\321q\343\3061{\366l~\377\375w\274^/\35\35\35l\330\260\1\200\307\37"
 #"\177\234o\277\375\226\344\344\344\36\2353B\2146\1\eB\223\311DQQ\21Y"
 #"YY,[\266\214\366\366v\362\362\362"
 #"\210\210\210\340\334\271s455\361\345"
 #"\227_\312R\375b\324\v\330\20\2\244"
 #"\246\246r\361\342E\356\335\273\307\270q"
 #"\3430\231Ldffr\367\356]\340\357\373\301\341t\377\376\375a?\247\bm"
 #"\1\35B\350\31\264\260\260\260\36\3074"
 #"M\353\366D\267\307\343\301`0\f\251\225LJJb\372\364\351C+V\210^"
 #"\4l\357\350`\324\327\327s\344\310\21\337\30bRR\22\e6l\220imA"
 #"\300\351tr\355\3325\322\322\322\364."
 #"e\310B\"\204\232\246\361\340\301\203n"
 #"\307dk\267\300\244i\32\325\325\325\334\271s\207\252\252*N\235:Eff&"
 #"\a\17\36\324\273\264!\v\370\313\321\201"
 #"\b\v\v\223\300\5\211\a\17\36`\263\331|[\271\a\303\20T\300\216\23"
 #"\212\320\24\31\31\211\315f\343\304\211"
 #"\23\254X\261B\357r\206EH\264\204"
) 500
(
 #"\"\270\4\333N\277\322\22\n\2413\t"
 #"\241\20:\223\20\n\2413\t\241\20:"
 #"\223\20\n\2413\t\241\20:\223\20\212"
 #"\2007\22K]\372\223\214\23\212\200\242"
 #"i\32{\367\356\345\326\255[\\\275z"
 #"\25\200\363\347\317\223\223\223\203\246i|"
 #"\362\311'\0017\216(!\24\1)::\232\354\354l\262\263\263\1\270}\3736"
 #"\327\256]\323\271\252\241\t\211\t\334B"
 #"\214frO(\204\316$\204!\302\353\365R\\\\\254w\31\242\27\22\302\20\321"
 #"\332\332JII\t^\257W\357R\304?H\bG\1UU\3\276\233]\f\235"
 #"\204PG.\227\213\235;w\222\222\222\302\306\215\eq:\235\224\226\226J C"
 #"\214\204P'.\227\v\253\325Jss"
 #"3\337}\367\35\361\361\361\304\305\305\361"
 #"\312+\257\370V\213\23\241AB\250\3UUY\263f\r\217<\362\b%%%"
 #"\230L&rss1\233\315=v\223r\271\\\24\27\27S^^\216\313\345\322"
 #"\261j\341/2X\257\203\302\302B\32\32\32x\377\375\367}\3133\272\\.\24"
 #"Ea\331\262e\276e\375\235N'\273v\355\";;\2333g\316\360\306\eo"
 #"p\372\364ibcc\373<\267\252\252\344\345\345\365XSG\3234Z[[\331"
 #"\262eK\217\327\22\22\22\310\315\315\355"
 #"\363\234\345\345\345\34?~|\250_7d-Y\262\204M\2336=\364}\22\302"
 #"\21\246\252*UUU\0\244\247\247\373"
 #"\216\177\377\375\367\0\335\226a<|\370"
 #"0\212\242\220\226\226FZZ\32g\317"
 #"\236\345\3157\337\344\324\251S\375.\\"
 #"5\177\376\374\36;P\251\252\312\371\363\347{}\355a\273IEFF>\364="
 #"\242\247\350\350\350\1\275OB8\302<"
 #"\36\17N\247\23\263\331\314\304\211\23"
 #"\201\316V\252\276\276\36\200\245K\227\342p8HLL"
 #"d\316\2349\\\276|\31\350\\\242q\374\370\361\264\267"
) 500
(
 #"\267\363\340\301\203>Ch4\32{\375\337\327\345rQRRBVV\326\240\347"
 #"Vv\375' \374C\356\tG\230\301`\340\211'\236`\312\224)DEE\1"
 #"\177\357&\25\27\27\307\304\211\23\331\272"
 #"u+\315\315\315l\332\264\211\232\232\32"
 #"\"##\361x<\334\274y\23\213\305\22p\23\224E\377$\204#\314`00"
 #"o\336<\332\333\333imm\305\355v\263n\335:n\334\270\301\330\261c}-"
 #"_\327R\373]-^aa!\361\361\361\24\24\24\350V\273\360\17\t\341\b\v"
 #"\v\v\243\260\260\220y\363\346\261b\305"
 #"\n\326\257_OFF\6\273w\357\246"
 #"\265\265\225\355\333\267\363\361\307\37wk\355JKKill\344\304\211\23=V"
 #"\22\27\201O\356\tu`2\231\370\354"
 #"\263\317\270{\367.\6\203\301\327\e\232"
 #"\233\233\213\307\343\351\266\241Mmm-uuu\34;v\f\217\307\303\313/\277"
 #"\214\315f\223K\322 \"\2172\215b\265\265\265dee\261v\355Z\0\24E"
 #"\301\353\365r\354\330\261A/\353\257i"
 #"\32\r\r\r\262\t\316($\227\243\243"
 #"\224\246i\\\270p\201i\323\246\321\320\320@CC\0037o\336d\321\242EC"
 #"\332W#,,L\28H\232\246\321\322\322\302\236={\374:\225PZ\302Q"
 #"\254\257\177x\331\334\306\277\352\353\353\251"
 #"\251\251\241\261\261\2213g\316\20\e\e"
 #"\213\335n\367\333-\200\264\204\243X\327"
 #"nR\377\374#\374\253\251\251\211\e7n\260h\321\242\21\331\365IZB!\372"
 #"\340v\273\2314i\22\26\213EZB!\202\231\204P\b\235I\b\205\320\231\204"
 #"P\b\235I\b\205\30\200\216\216\16\277\235[B(\204\316$\204B\350LB("
 #"\6\315\353\365\372\36B\16V\232\246q\357\336\275\36\307\374AB("
 #"\6E\3234V\257^\315\302\205\v\331\277\177\277\336\345\370Eii)"
) 500
(
 #"999\344\344\344\0\235k\375\254["
 #"\267\216\234\234\34\334n\367\260\177\236<"
 #"\312$\6-\"\"\2\300\367\bV\260"
 #"\211\217\217\367\255x\227\221\221\341;\256"
 #"iZ\267\225\360\206\213L[\23\203\346"
 #"\365z\271v\355Z\277\253\276\211\201\223\20\212\200\245iZPLh\227{B\21"
 #"\220\34\16\aeeez\2271,$"
 #"\204\302/\312\312\312|\353\253\372\203\323"
 #"\351\304n\267\a\305\276\35\3221#\206"
 #"]UU\25\353\327\257\a\340\267\337~#&&F\347\212F7\t\241\30v\t"
 #"\t\tX,\26:::\2304i\222\336\345\214z\22B1\354bbb\250\255"
 #"\255%\"\"BV\205\e\0\t\241\360"
 #"\213\341\34C\354\357\276\257\267uX\3\255\307T\206(\204n\0062\304P__"
 #"Oqqq\217\26UQ\24\334n7\211\211\211=~\347\331g\237\345\245\227^"
 #"\352\363\334\373\367\357\347\304\211\23C/"
 #"\274\37\25\25\25\335\326\215\35\bi\t"
 #"\205.\\.\27\371\371\371\254]\273\226"
 #"\324\324\324>\3377w\356\\\376\373\337"
 #"\377\3668~\341\302\5\2403p\377\24"
 #"\e\e\333o\270\223\223\223\a\274c\322"
 #"`\reF\215\264\204b\304i\232\306"
 #"\346\315\2339t\350\20\26\213\205\332\332"
 #"\332A_\276\226\225\225q\366\354Y\16\36<\30p\227\237\377$-\241\30qa"
 #"aa\254]\273\226\253W\257\222\233\233\e\264sP\aJB(t\221\232\232\312"
 #"\342\305\213\245\367\24\2311#t$\1\354$!\24\1I\3234\274^\257\336e"
 #"\f\v\351\230\21\1I\3234.]\272DRR\222\336\245\374k\22B!t&"
 #"\227\243B\350LB(\204\316$\204B\350LB(\4\235\17\t\227\226\226\372\36"
 #"D\366\307\252j}\221\20\212\220\267g\317\36\226/_Nss3\305\305"
 #"\305\314\235;\227I\223&\215\330\332\2522cF\204\264={\366\360\316;"
) 500
(
 #"\357p\354\3301V\257^\215\252\252X,\26\0f\314\2301\"5HK(B"
 #"\226\323\351\244\240\240\200\225+W\262r\345J\0<\36\17mmmX,\26\277"
 #"\2541\332\e\t\241\bY\37}\364\21\252\252b\265Z}Ob\264\264\264\240("
 #"\nIII#6\261\\B(B\222\252\2528\34\16\0\322\323\323}\307\353\352"
 #"\352\0HII\351\366D\277\252\252\276\237UUEU\325a\253E\356\tEH"
 #"\233={6\217=\366\30\3209\25\256"
 #"\251\251\t\0\253\325\312\216\35;X\276"
 #"|9\6\203\201\267\337~\233\211\23'"
 #"b\265Z\371\351\247\237p8\34l\331"
 #"\262\205\354\354\354\177]\203\264\204\"$EDD`6\233\0313\346\357\bTW"
 #"WSQQ\201\305b\341\336\275{TWW\223\220\220\300\221#G(((\240"
 #"\262\262\222\261c\307RTT\304\342\305"
 #"\213\251\252\252\32\226uOe\356\250\b"
 #"Y\16\207\203\364\364t\236~\372i\240s\217\215\250\250(\316\2349C||<"
 #"\323\246M\243\250\250\210s\347\316q\341"
 #"\302\5\276\371\346\e\354v;\341\341\341ddd0c\306\f\336}\367\335\177]"
 #"\207\204P\204\264\226\226\26\352\353\353y"
 #"\364\321Gy\346\231g0\32\215TUUq\347\316\35\337\245\246\246iddd"
 #"`6\233\371\360\303\17QU\225\311\223'SYY9,\17&\313=\241\bi"
 #"3f\314\3501\36\230\226\226\326\355g"
 #"\217\307\303\371\363\3479p\340\0\0_}\365\25QQQL\236<\231m\333\266"
 #"q\360\340\301\177U\203\334\23\n\361\20"
 #"\315\315\315(\212\202\325j\5 ::"
 #"\232\250\250(v\354\330\301\266m\333\376"
 #"\365\371\345rT\210\1p8\34\335\36 v8\34\314\2325kX\306\22%\204"
 #"B\350L.G\205\320\231\204P\b\235I\b\205"
 #"\320\331\377\0\34\253\306\267\345=\233\300\0\0\0\0"
) 8 #"IEND\256B`\202"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";;-- These can be infinite or finite, depending on your choice of x"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;-- Specifically, we will focus on positive numbers which can be re"
 #"presented by"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";;-- x = b0 + 1    1    1   "
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;           ---  ---  ---   ..."
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;           b1+  b2+  b3+"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;-- The position of the addition symbol is shorthand for the layeri"
 #"ng shown"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";;--   in the image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";;-- We will represent a sequence of such additions as a list of the"
 #" b values"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #";;-- ContinuedFraction is thus a [Listof Number]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;-- Sidenote, the built-in function (rationalize x tol) does the sa"
 #"me thing as"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";;--   my function and the outputs seem to almost always agree"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;-- But when you push the functions to double precision, they somet"
 #"imes are"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;--   a little different. But Racket prioritizes smallest denominat"
 #"or, it seems"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; Try this: (check-rationalize (sin 765/738))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Number -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; Takes a number, calls my function (tol 10^-16) and built-in func "
 #"to compare"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";;   results"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"check-rationalize"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"mine"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-frac"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-16"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"rack"
0 0 24 3 2 #" ("
0 0 14 3 11 #"rationalize"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 3 #"-16"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 14 3 4 #"mine"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"println"
0 0 24 3 1 #" "
0 0 14 3 4 #"rack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"mine"
0 0 24 3 1 #" "
0 0 14 3 4 #"rack"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Number -> ContinuedFraction"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; Takes a number and returns a continued fraction that matches it t"
 #"o some tol"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-frac"
0 0 24 3 1 #" "
0 0 14 3 2 #"pi"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.01"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-frac"
0 0 24 3 1 #" "
0 0 14 3 2 #"pi"
0 0 24 3 1 #" "
0 0 21 3 6 #"0.0001"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-frac"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 5 #"0.001"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-frac"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 1 #" "
0 0 14 3 3 #"tol"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"nmax"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 17 3 50 #";;x=rational => finite expansion, but could be big"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"b0"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"p-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"p0"
0 0 24 3 1 #" "
0 0 14 3 2 #"b0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"q-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"q0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 72
(
 #";; (list Number Number Number Number) Number Number -> ContinuedFrac"
 #"tion"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 76
(
 #";; Takes (pn-1,pn-2,qn-1,qn-2),current xn, n to calculate next level"
 #" or stop"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 58
#";; pn = pn-2 + bn*pn-1, qn = qn-2 + bn*qn-2, bn=(floor xn)"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-frac-runner"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-stuff"
0 0 24 3 1 #" "
0 0 14 3 2 #"xn"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"pn-1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-stuff"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"pn-2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-stuff"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"qn-1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-stuff"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"qn-2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 9 #"old-stuff"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 2 #" ("
0 0 14 3 14 #"inexact->exact"
0 0 24 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 24 3 1 #" "
0 0 14 3 2 #"xn"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"dif"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"xn"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 2 #"))"
0 0 17 3 38 #";These 2 lines are to remove 1/0 error"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"next-x"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 3 #"dif"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 2 #"xn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"xn"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"pn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"pn-2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 1 #" "
0 0 14 3 4 #"pn-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"qn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"qn-2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 1 #" "
0 0 14 3 4 #"qn-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stuff"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"pn"
0 0 24 3 1 #" "
0 0 14 3 4 #"pn-1"
0 0 24 3 1 #" "
0 0 14 3 2 #"qn"
0 0 24 3 1 #" "
0 0 14 3 4 #"qn-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 4 #"nmax"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"Maximum Depth Reached\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 2 #"pn"
0 0 24 3 1 #" "
0 0 14 3 2 #"qn"
0 0 24 3 4 #"))) "
0 0 14 3 3 #"tol"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"())]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-frac-runner"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-stuff"
0 0 24 3 1 #" "
0 0 14 3 6 #"next-x"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 8 #")))]))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 1 #" "
0 0 14 3 2 #"b0"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"b0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 5 #"local"
0 0 24 3 3 #" (("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"x1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"x0"
0 0 24 3 1 #" "
0 0 14 3 2 #"b0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"b0"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-frac-runner"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"p0"
0 0 24 3 1 #" "
0 0 14 3 3 #"p-1"
0 0 24 3 1 #" "
0 0 14 3 2 #"q0"
0 0 24 3 1 #" "
0 0 14 3 3 #"q-1"
0 0 24 3 2 #") "
0 0 14 3 2 #"x1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 7 #")))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; ContinuedFraction -> Rational"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Evaluates the continued fraction to a fraction"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")) "
0 0 21 3 5 #"43/30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"292"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"292"
0 0 24 3 10 #"))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-rational"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lob"
0 0 24 3 7 #"))))]))"
0           0
